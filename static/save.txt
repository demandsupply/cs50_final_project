TO COPY
for(d = 0; d <dictList.length; d++) {
    stringList = listList[d]; 
    counterParenthesis = 0;
    for(i=0; i<stringList.length; i++) {
        if(stringList[i]==='[') {
            counterParenthesis = counterParenthesis+1;
            console.log(`number of [ is ${counterParenthesis}`);
        } 
    }
    allC = [];
    var stringNumber='';
    listIndex = 0;
    listEpisodesIndex = 0;
    typefo = typeof stringList;
    // console.log(`string list type is ${typefo}`);
    // for(i=0; i<stringList.length; i++) {
    //     console.log(`item ${i} is ${stringList[i]}`)
    // }

    for(character=0; character<stringList.length; character++) {
        console.log(`character is ${stringList[character]}`);
        if(stringList[character]==='[') {
            console.log(`create a new list of ratings for each episode of the specified season`);
            stringNumber='';
            listEpisodes=[];
        } 

        else if(stringList[character]===']') {
            NumberNumber = Number(stringNumber);
            listEpisodes.push(NumberNumber);
            stringNumber='';
            console.log(`closed the previous list of ratings for each episode of the specified season`);
            listSeasons.push(listEpisodes);
            listIndex = listIndex + 1;
        } 

        else if(stringList[character]!='[' && stringList[character]!=',' && stringList[character]!=']') {
            console.log(`CHARACTER TO SAVE is ${stringList[character]}`);
            stringNumber = stringNumber + stringList[character];
        }

        else if(stringList[character]===',') {
            console.log(`CHARACTER is VIRGOLA`);
            NumberNumber = Number(stringNumber);
            listEpisodes.push(NumberNumber);
            console.log(`stringNumber type is ${typeof NumberNumber}`);
            stringNumber='';
            console.log(`stringNumber empty is ${stringNumber}`);

            listEpisodesIndex++;
        }

        console.log(`listEpisodes is ${listEpisodes}`);
        console.log(`stringNumber is ${stringNumber}`);

    }
    console.log(`listindex is ${listIndex}`);
    console.log(`listSeasons is ${listSeasons}`);
    console.log(listSeasons);
    console.log(`listSeasons type is ${typeof listSeasons}`);


    
    // tempList = stringList.split(',').map(Number);
    // console.log(`templistlength is ${stringList.length}`);
    // xyValues = [];
    // console.log(`templist is ${tempList}`);
    // console.log(xyValues[d]);
    // for(s = 1; s < tempList.length +1; s++) {
    //     for (e = 1; e < tempList[s-1].length +1; e++) {
    //         xyValues.push({ x: objectCounter +1, y: tempList[s-1][e-1], z: ` S${s}E${e}`});
    //         console.log("s" + s + "e" + e);
    //         objectCounter++;
    //     }
    // }
    // xyValuesList.push(xyValues);
    // console.log(`xyValuesList is ${xyValuesList}`);

}

MORE DICTS FOR DATASETS

xyValues2 = [];
xyValues3 = [];

objectCounter2 = 0;
objectCounter3 = 0;

tempList = Object.values(listDict[0].ratings)
console.log("templist is", tempList);

for(s = 0; s < tempList.length; s++) {
    xyValues.push({ x: objectCounter +1, y: tempList[s], z: `E${s}`});
    //console.log("n" + (objectCounter + 1) + "rate" + tempList[s]);
    objectCounter++;
}
tempList2 = Object.values(listDict[1].ratings)
console.log("templist is", tempList2);

for(s = 0; s < tempList2.length; s++) {
    xyValues2.push({ x: objectCounter2 +1, y: tempList2[s], z: `E${s}`});
    //console.log("n" + (objectCounter2 + 1) + "rate" + tempList2[s]);
    objectCounter2++;
}
tempList3 = Object.values(listDict[2].ratings)
console.log("templist is", tempList3);

for(s = 0; s < tempList3.length; s++) {
    xyValues3.push({ x: objectCounter3 +1, y: tempList3[s], z: `E${s}`});
    //console.log("n" + (objectCounter3 + 1) + "rate" + tempList3[s]);
    objectCounter3++;
}

console.log("xyValues is", xyValues);
console.log("xyValues2 is", xyValues2);
console.log("xyValues3 is", xyValues3);
// console.log("xyValues is", xyValues[0].z);
console.log(objectCounter);



    if (highestCounter < temporary.length) {
        highestCounter = temporary.length;
    }


const randomColor = (i) => {
  const colors = ["#EF476F", "#FFD166", "#06D6A0", "#118AB2", "#073B4C", "#DD614A", "#F4A698", "#C5C392", "#73A580", "#83D483"];
  return colors[i % colors.length];
}



                callbacks: {
                    label: function(tooltipItem) {
                        <!-- console.log("tooltipItem:", tooltipItem);

                        const index = tooltipItem.index;
                        const movie = movieObjects[index];

                        console.log("Accessed movie:", movie);
                        
                        return `${movie.title} - Rating: ${movie.rating} - Plot: ${movie.plot} - Img: ${movie.poster_path}`; -->
                    }
                
                },




                